{"version":3,"sources":["Todolist.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Todolist","props","className","aria-hidden","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","deleteItems","console","log","oldItems","filter","arrElem","index","type","placeholder","value","onChange","event","target","olditems","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAuBeA,EArBC,SAACC,GAIb,OACI,mCACE,sBAAKC,UAAU,aAAf,UACI,mBAAGA,UAAW,cACdC,cAAY,OACZC,QAAS,WACLH,EAAMI,SAASJ,EAAMK,OAE9B,mCAAML,EAAMM,KAAZ,aCkDMC,EA5DH,WACR,MAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAeC,EAAf,KAaMC,EAAa,SAACR,GAChBS,QAAQC,IAAI,WAEZH,GAAS,SAACI,GACN,OAAOA,EAASC,QAAO,SAACC,EAAUC,GAC1B,OAAOA,IAAUd,SAIjC,OAAO,mCACP,qBAAKJ,UAAU,WAAf,SAEI,sBAAKA,UAAU,aAAf,UACI,uBACA,iEACA,8HAEE,yDACF,6CACA,uBACN,uBAAOmB,KAAK,OAAQC,YAAY,cAAcC,MAAOb,EAAWc,SAhChD,SAACC,GACfd,EAAac,EAAMC,OAAOH,UAgC1B,wBAAQnB,QA7BO,WACfS,GAAU,SAACc,GACV,MAAM,GAAN,mBAAUA,GAAV,CAAoBjB,OAGrBC,EAAa,KAwBb,iBAGA,6BAGGC,EAAMgB,KAAK,SAAEC,EAAUT,GACvB,OAAO,cAAC,EAAD,CAENd,GAAIc,EACLb,KAAMsB,EACNxB,SAAWS,GAHNM,gBCpCDU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEC,cAAC,EAAD,MAGDC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6376f8f9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Todolist =(props)=>{\r\n\r\n   \r\n   \r\n    return (\r\n        <> \r\n          <div className=\"todo_style\">\r\n              <i className= \"fa fa-times\" \r\n              aria-hidden=\"true\" \r\n              onClick={()=>{\r\n                  props.onSelect(props.id)\r\n              }}/>\r\n         <li> {props.text} </li>\r\n           </div>\r\n         </>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Todolist;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Todolist from './Todolist';\r\n\r\nconst App = () =>{\r\n    const [inputList , setInputList] = useState(\"\");\r\n    const [Items , setItems] = useState([]);\r\n    const itemEvent = (event)=> {\r\n        setInputList(event.target.value);\r\n    };\r\n    \r\n    const listofitems =() =>{\r\n        setItems( (olditems)=> {\r\n         return[...olditems, inputList];\r\n        } );\r\n\r\n        setInputList(\"\");\r\n    };\r\n\r\n    const deleteItems =(id)=>{\r\n        console.log('deleted');\r\n\r\n        setItems((oldItems)=>{\r\n            return oldItems.filter((arrElem , index)=>{\r\n                    return index !== id;\r\n            });\r\n        });\r\n    };\r\n    return <>\r\n    <div className=\"main_div\">\r\n       \r\n        <div className=\"center_div\">\r\n            <br/>\r\n            <h2 >Daily Goals Manager Application</h2>\r\n            <p> Here you can set your daily goals , after completing them you can close your respective goal\r\n              </p>\r\n              <h3>Developer : Manu Sharma</h3>\r\n            <h1>Daily Goals</h1>\r\n            <br />\r\n      <input type=\"text\"  placeholder=\"Add Goals..\" value={inputList} onChange={itemEvent}/>\r\n        <button onClick={listofitems}> + </button>\r\n\r\n\r\n        <ol>\r\n           {/*<li> {inputList} </li>*/}\r\n\r\n          {Items.map( ( itemval , index) => {\r\n           return <Todolist \r\n           key={index}\r\n            id={index}\r\n           text={itemval} \r\n           onSelect ={deleteItems}\r\n            />\r\n          })}\r\n        </ol>\r\n         </div>\r\n    </div>\r\n\r\n    \r\n    \r\n    </>\r\n\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n \n   <App/>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}